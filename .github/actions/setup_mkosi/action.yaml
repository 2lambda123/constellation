name: Setup mkosi
description: Install mkosi and all its dependencies
inputs:
  version:
    description: "Version (commit hash) of mkosi to install."
    required: true
runs:
  using: composite
  steps:
    - name: Dependencies
      shell: bash
      run: |
        echo "::group::Dependencies"
        echo "deb-src http://archive.ubuntu.com/ubuntu/ $(lsb_release -cs) main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get install --assume-yes --no-install-recommends \
          dnf \
          e2fsprogs \
          libfdisk-dev \
          mtools \
          ovmf \
          qemu-system-x86 \
          squashfs-tools \
          systemd-container
        echo "::endgroup::"

    # Try to eliminate "Failed to dissect image: Connection timed out" errors from nspawn by compiling
    # systemd-nspawn from v251 from source.
    - name: Update systemd-nspawn
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        echo "::group::Update systemd-nspawn"
        sudo apt-get build-dep systemd
        git clone https://github.com/systemd/systemd --depth=1
        meson systemd/build systemd -Drepart=true -Defi=true
        ninja -C systemd/build systemd-nspawn systemd-dissect systemd-repart systemd-analyze bootctl ukify
        sudo ln -svf $PWD/systemd/build/systemd-nspawn /usr/bin/systemd-nspawn
        sudo ln -svf $PWD/systemd/build/systemd-dissect /usr/bin/systemd-dissect
        sudo ln -svf $PWD/systemd/build/systemd-repart /usr/bin/systemd-repart
        sudo ln -svf $PWD/systemd/build/systemd-analyze /usr/bin/systemd-analyze
        sudo ln -svf $PWD/systemd/build/bootctl /usr/bin/bootctl
        sudo ln -svf $PWD/systemd/build/ukify /usr/bin/ukify
        systemd-nspawn --version
        systemd-dissect --version
        systemd-repart --version
        bootctl --version
        echo "::endgroup::"

    - name: Install
      shell: bash
      run: sudo python3 -m pip install git+https://github.com/systemd/mkosi.git@${{ inputs.version }}
